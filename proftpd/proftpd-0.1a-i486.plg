<?xml version='1.0' standalone='yes'?>
<PLUGIN>
<!--
Copyright 2013, SlrG
ProFTP Daemon Plugin for unRAID

Version history:
 2013-02-01 - version 0.1  : First release
 2013-02-02 - version 0.1a : Enable download of iconfiles if not yet present. (Thanks overbyrn!)

Plugin file locations:
 /boot/config/plugins/proftpd-0.1-i486.plg                            # this file
 /tmp/prpftpd-cleanup                                                 # plugin cleanup script

 /boot/config/plugins/proftpd/README                                  # README file

 /boot/config/plugins/proftpd/proftpd-1.3.5rc1-0.1slrg.tgz            # selfbuilt proftpd package with many additional modules
 /boot/config/plugins/proftpd/proftpd.conf                            # proftpd config file

 /boot/config/plugins/proftpd/proftpd.png                             # icon file
 /usr/local/emhttp/plugins/proftpd/proftpd.png                        # icon file
 /usr/local/emhttp/plugins/proftpd/proftpd.page                       # plugin page file
 /usr/local/emhttp/plugins/proftpd/device_status.png                  # plugin page icon file
 /usr/local/emhttp/plugins/proftpd/new_config.png                     # plugin page icon file
 /boot/config/plugins/proftpd/proftpd.cfg                             # plugin page config file
 /usr/local/emhttp/plugins/proftpd/proftpd.php                        # plugin page file

 /usr/local/emhttp/plugins/proftpd/event/disks_mounted                # event handler will start proftpd
 /usr/local/emhttp/plugins/proftpd/event/unmounting_disks             # event handler will stop proftpd
                                                                      
 /etc/rc.d/rc.proftpd                                                 # proftpd startup script
 /tmp/proftpd-install                                                 # plugin installation script
-->

<!-- clean up previous install -->
<FILE Name="/tmp/proftpd-cleanup" Run="/bin/bash">
<INLINE>
<![CDATA[
[ -d /usr/local/emhttp/plugins/proftpd ] && rm -f -R /usr/local/emhttp/plugins/proftpd
[ -f /etc/rc.d/rc.proftpd ] && rm -f /etc/rc.d/rc.proftpd
rm /tmp/proftpd-cleanup
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/proftpd/README">
<INLINE>
<![CDATA[
                                Credits:
                             **************
Great thanks go to Limetech for giving us unRAID. To the ProFTPD project for
their feature rich ftp server and the icon I used for this plugin.

Further thanks go to Benni-Chan, Influencer, prostuff1 and speeding_ant for
their great plugins. Studying their code was what made this plugin possible.
                             **************

HOWTO:
I wanted to keep this plugin as simple as possible. So there is no fancy
user- or servermanagement. The plugin provides you with the ability to 
define ftp-only users and assign them their own home directory, which they
won't be able to leave. Of course it is possible to assign the same directory
to more than one user.

So, how do you do it? You open the unRAID user management and choose add user.
Then you choose username and password like you usually would. The
difference is in the description field, what I guess you would normally
leave empty. Into this field you put "ftpuser /path/to/homedir/of/user"
without the quotes and save. Then please restart the proftp daemon.

The daemon start script will now scan all users. Every user without the
"ftpuser" keyword in the description field will be put into an ftpusers file.
This files contains users who are not allowed to access the ftp server. I know
this is a somewhat strange logic. :) Then the path to the user directory given
in the description will be extracted and put into the root field of the user
file. unRAID doesn't expose this field on its users page and normally fills it
with / which would give all users access to all files on your server. 

You are now able to do something like:
user
user1 ftpuser
user2 ftpuser /mnt/cache/FTP
user3 ftpuser /mnt/cache/FTP/dir_a
user4 ftpuser /mnt/cache/FTP/dir_b

user  will not be able to login via ftp
user1 will have full access to /
user2 will have access to all files in /mnt/cache/FTP so he will be able to
      access the files in dir_a and dir_b, too.
user3 will have access to dir_a and subdirectories but not to /mnt/cache/FTP or
      dir_b
user4 will have access to dir_b and subdirectories but not to /mnt/cache/FTP or
      dir_a
 
So, what if this is not enough for you? Well, for a more fine grained control
you may edit the /etc/proftpd.conf file in shell directly. By adding directory
entries you'll have a powerful weapon to fulfill your needs. Have a look at:
http://www.proftpd.org/docs/howto/Directory.html
for further explanation.

Bans, quotas, sftp, tls, sql users and more may be possible. The proftpd
included in my plugin was compiled with the following modules:
  mod_auth.c          mod_quotatab.c
  mod_auth_file.c     mod_quotatab_file.c
  mod_auth_unix.c     mod_quotatab_sql.c
  mod_ban.c           mod_readme.c
  mod_cap.c           mod_rewrite.c
  mod_core.c          mod_sftp.c
  mod_ctrls.c         mod_sftp_sql.c
  mod_ctrls_admin.c   mod_site.c
  mod_delay.c         mod_sql.c
  mod_facts.c         mod_sql_mysql.c
  mod_ident.c         mod_sql_passwd.c
  mod_log.c           mod_tls.c
  mod_ls.c            mod_xfer.c

In the future it may be possible to get php and sql based user and server
management tools to work. Feel free to try an please report and share your
findings.

SlrG
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/proftpd/proftpd-1.3.5rc1-0.1slrg.tgz" Run="upgradepkg --install-new">
<URL>--no-check-certificate https://github.com/SlrG/unRAIDplugins/raw/master/proftpd/proftpd-1.3.5rc1-0.1slrg.tgz</URL>
<MD5>3f3b43615854bcea22b0697c557bbebb</MD5>
</FILE>

<FILE Name="/boot/config/plugins/proftpd/proftpd.conf">
<INLINE>
<![CDATA[
# Server Settings
ServerName              "ProFTPD"
ServerType              standalone
DefaultServer           on
PidFile                 "/var/run/proftpd.pid"

# Port 21 is the standard FTP port. You propably should not connect to the
# internet with this port. Make your router forward another port to
# this one instead.
Port                    21

# Set the user and group under which the server will run.
User                    nobody
Group                   users

# Prevent DoS attacks
MaxInstances            30

# Speedup Login
UseReverseDNS           off
IdentLookups            off 

# Control Logging - comment and uncomment as needed
# If logging Directory is world writeable the server won't start!
# If no SystemLog is defined proftpd will log to servers syslog.
#SystemLog               NONE           
#SystemLog               /boot/config/plugins/proftpd/slog
TransferLog             NONE
#TransferLog             /boot/config/plugins/proftpd/xferlog
WtmpLog                 NONE

# As a security precaution prevent root and other users in
# /etc/ftpuser from accessing the FTP server.
UseFtpUsers             on
RootLogin               off

# Umask 022 is a good standard umask to prevent new dirs and files
# from being group and world writable.
Umask 022

# "Jail" FTP-Users into their home directory. (chroot)
# The root directory has to be set in description field
# when defining an user:
# ftpuser /mnt/cache/FTP
# See README for more information.
DefaultRoot ~

# Shell has to be set when defining an user. As a security precaution
# it is set to "/bin/false" as FTP-Users should not have shell access.
# This setting makes proftpd accept invalid shells.
RequireValidShell       no

# Normally, we want files to be overwriteable.
AllowOverwrite          on
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/proftpd/proftpd.png">
<URL>--no-check-certificate https://github.com/SlrG/unRAIDplugins/raw/master/proftpd/proftpd.png</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/proftpd/proftpd.png">
<LOCAL>/boot/config/plugins/proftpd/proftpd.png</LOCAL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/proftpd/device_status.png">
<URL>--no-check-certificate https://github.com/SlrG/unRAIDplugins/raw/master/proftpd/device_status.png</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/proftpd/new_config.png">
<URL>--no-check-certificate https://github.com/SlrG/unRAIDplugins/raw/master/proftpd/new_config.png</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/proftpd/proftpd.page">
<INLINE>
<![CDATA[
Menu="NetworkServices"
Icon="proftpd.png"
Version="0.1-i468"
Author="SlrG"
Type="php"
Title="ProFTP Daemon"
]]>
</INLINE>
</FILE>

<FILE Name="/boot/config/plugins/proftpd/proftpd.cfg">
<INLINE>
<![CDATA[
# proftpd configuration
SERVICE="disable"
]]>
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/proftpd/proftpd.php">
<INLINE>
<![CDATA[
<?PHP
  $proftpd_cfg = parse_ini_file( "/boot/config/plugins/proftpd/proftpd.cfg" );
  $proftpd_running = file_exists( "/var/run/proftpd.pid") ? "yes" : "no";
?>
<div style="width: 49%; float:left">
  <div id="title">
    <span class="left">Status:&#32;<img src='/plugins/proftpd/device_status.png'>
      <?if ($proftpd_running=="yes"):?>
        <span class="green"><b>RUNNING</b></span></a>
      <?else:?>
        <span class="red"><b>STOPPED</b></span>
      <?endif;?>
    </span>
  </div>	
  <?if ($proftpd_running=="yes"):?>
    <div style="position:relative;float:left;width:50%;text-align:right; margin-bottom:24px">
      <form name="proftpd_start_stop" method="POST" action="/update.htm" target="progressFrame">
        <input type="hidden" name="cmd" value="/etc/rc.d/rc.proftpd stop">
        <input type="submit" name="runCmd" value="Stop">
      </form>
    </div>
    <div style="position:relative;float:left;width:50%;margin-bottom:24px">
      <form name="proftpd_restart" method="POST" action="/update.htm" target="progressFrame">
        <input type="hidden" name="cmd" value="/etc/rc.d/rc.proftpd restart">
        <input type="submit" name="runCmd" value="Restart">
      </form>
    </div>
  <?else:?>
    <div style="position:relative;float:left;width:100%;text-align:center;margin-bottom:24px">
      <form name="proftpd_start" method="POST" action="/update.htm" target="progressFrame">
        <input type="hidden" name="cmd" value="/etc/rc.d/rc.proftpd buttonstart">
        <input type="submit" name="runCmd" value="Start">
      </form>
    </div>
  <?endif;?>
</div>
<div style="width: 49%; float:right">
  <div id="title">
    <span class="left">Configuration:&#32;<img src='/plugins/proftpd/new_config.png'></span>
  </div>
  <form name="proftpd_settings" method="POST" action="/update.htm" target="progressFrame">
    <input type="hidden" name="cmd" value="/etc/rc.d/rc.proftpd">
    <table class="settings">
      <tr>
        <td>Enable ProFTP Daemon:</td>
        <td>
          <select name="arg1" size="1">
            <?=mk_option($proftpd_cfg['SERVICE'], "disable", "No");?>
            <?=mk_option($proftpd_cfg['SERVICE'], "enable", "Yes");?>
          </select>
        </td>
      </tr>
    </table>
    <div align="center">
      <hr size="3" align="center" width="75%" color="grey" style="margin-top:20px;margin-bottom:18px" >
      <input type="submit" name="runCmd" value="Apply" style="margin-bottom:35px">
      <button type="button" style="margin-bottom:35px" onClick="done();">Done</button>
    </div>
  </form>
  <br />
</div>
]]>
</INLINE>
</FILE>

<FILE Name="/etc/rc.d/rc.proftpd"  Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash

# ProFTPD files
FTPD_BIN=/usr/local/sbin/proftpd
FTPD_CFG=/etc/proftpd.conf
PIDFILE=/var/run/proftpd.pid
CONFIG=/boot/config/plugins/proftpd/proftpd.cfg
# read our configuration
source $CONFIG

function userjail()
{
  touch /etc/passwdtmp
  echo "# Users listed in /etc/ftpusers are not allowed to login via FTP!" > /etc/ftpusers
  OLDIFS=$IFS
  while IFS=':' read user pass uid gid full home shell
  do
    if [[ "$full" == *ftpuser* ]]
    then
      # extract homedir from description and put it into correct place
      nhome=${full:8}
      if [ -n "$nhome" ]
      then
        home="$nhome"
      fi
      echo "$user:$pass:$uid:$gid:$full:$home:$shell" >> /etc/passwdtmp
    else
      # add non ftp users to /etc/ftpusers file
      echo "$user:$pass:$uid:$gid:$full:$home:$shell" >> /etc/passwdtmp
      echo "$user" >> /etc/ftpusers
    fi
  done < /etc/passwd
  mv /etc/passwdtmp /etc/passwd
  IFS=$OLDIFS
}

function proftpd_start ()
{
  # enable service is disabled
  if [ $SERVICE != "enable" ]; then
    echo "service disabled, aborting start"
    exit 0
  fi

  if [ -n "$pid" ]; then
    echo "proftpd [PID $pid] already running"
    exit
  fi

  if [ -r $FTPD_CONF ]; then
    userjail
    echo "renewing userjail..."
    echo "starting proftpd..."
    sudo -u root $FTPD_BIN -c $FTPD_CFG &> /dev/null
  else
    echo "cannot start proftpd -- $FTPD_CONF missing"
  fi
}

function proftpd_stop()
{
  if [ -n "$pid" ]; then
    echo "stopping proftpd..."
    kill -TERM $pid
  else
    echo "proftpd not running"
    exit 1
  fi
}

# If PIDFILE exists, does it point to a proftpd process?

if [ -f $PIDFILE ]; then
  pid=`cat $PIDFILE`
fi

if [ ! -x $FTPD_BIN ]; then
  echo "$FTPD_BIN: cannot execute"
  exit 1
fi

case $1 in

  start)
    proftpd_start
    ;;
  
  buttonstart)
    SERVICE=enable
    proftpd_start
    ;;

  stop)
    proftpd_stop
    ;;

  restart)
    if [ -n "$pid" ]; then
      echo "renewing userjail..."
      userjail
      echo "restarting proftpd..."
      kill -HUP $pid
    else
      echo "proftpd not running"
      exit 1
    fi
    ;;
    
  enable)
    SERVICE=enable
    if [ -f $CONFIG ]; then
      sed -i "s/"disable"/"enable/"" $CONFIG	
    fi
    echo "proftpd unRAID service enabled"
    proftpd_start
    sleep 1
    ;;

  disable)
    SERVICE=disable
    if [ -f $CONFIG ]; then
      sed -i "s/"enable"/"disable/"" $CONFIG	
    fi
    echo "proftpd unRAID service disabled"
    proftpd_stop
    ;;

  *)
    echo "usage: $0 {start|buttonstart|stop|restart|enable|disable}"
    exit 1
    ;;

esac
exit 0
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/proftpd/event/disks_mounted" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.proftpd start
]]>
</INLINE>
</FILE>

<!-- event handler -->
<FILE Name="/usr/local/emhttp/plugins/proftpd/event/unmounting_disks" Mode="0770">
<INLINE>
<![CDATA[
#!/bin/bash
/etc/rc.d/rc.proftpd stop
]]>
</INLINE>
</FILE>

<FILE Name="/tmp/proftpd-install" Run="/bin/bash">
<INLINE>
<![CDATA[
plugin="proftpd"
version="$(ls /boot/config/plugins/$plugin-*.plg | cut -d- -f2 | tr '\n' ' ')"
echo "disable builtin FTP-Server..."
/bin/sed -i -e "s/^ftp/##ftp/" /etc/inetd.conf
echo "restart inetd to apply change..."
/etc/rc.d/rc.inetd restart
echo "remove example config file..."
rm /usr/local/etc/proftpd.conf
echo "symlink new config file..."
/bin/ln -s /boot/config/plugins/proftpd/proftpd.conf /etc/proftpd.conf
echo ""
echo "*************************************************************"
echo "* ProFTPD plugin has been installed."
echo "* Copyright 2013, SlrG"
echo "* Version: $version"
echo "*************************************************************"
echo ""

# Remove this install file - we are done!
rm -f /tmp/proftpd-install
]]>
</INLINE>
</FILE>

</PLUGIN>